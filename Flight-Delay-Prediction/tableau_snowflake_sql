//Average historical flight delays and predictions
WITH flight_data AS (
    select dayofweek(flightdate) as day_of_week_num
    , month(flightdate) as flight_month
    , crsdeptime
    , crsarrtime
    , case when len(to_varchar(crsdeptime)) = 3 then left(to_varchar(crsdeptime),1) || ':' || right(to_varchar(crsdeptime),2)
        when len(to_varchar(crsdeptime)) = 4 then left(to_varchar(crsdeptime),2) || ':' || right(to_varchar(crsdeptime),2)
        end as dep_time_text
    , case when len(to_varchar(crsarrtime)) = 3 then left(to_varchar(crsarrtime),1) || ':' || right(to_varchar(crsarrtime),2)
        when len(to_varchar(crsarrtime)) = 4 then left(to_varchar(crsarrtime),2) || ':' || right(to_varchar(crsarrtime),2)
        end as arr_time_text
    , case when crsdeptime >= 400 and crsdeptime < 1200 then 'Morning'
        when crsdeptime >= 1200 and crsdeptime < 1700 then 'Afternoon'
        when crsdeptime >=1700 and crsdeptime < 2000 then 'Evening'
        else 'Night'
        end as dep_time_bin
    , case when crsarrtime >= 400 and crsarrtime < 1200 then 'Morning'
        when crsarrtime >= 1200 and crsarrtime < 1700 then 'Afternoon'
        when crsarrtime >=1700 and crsarrtime < 2000 then 'Evening'
        else 'Night'
        end as arr_time_bin
    , origin
    , dest
    , airline
    , avg(nvl(try_to_number(depdelayminutes),0) + nvl(try_to_number(arrdelayminutes),0)) as avg_delay_actual
    , count(flightdate) as count_of_flights
    from flights.public.flights_data
    group by all
)

, flight_pred_data AS (
    select dayofweek(flightdate) as day_of_week_num
    , month(flightdate) as flight_month
    , crsdeptime
    , crsarrtime
    , case when len(to_varchar(crsdeptime)) = 3 then left(to_varchar(crsdeptime),1) || ':' || right(to_varchar(crsdeptime),2)
        when len(to_varchar(crsdeptime)) = 4 then left(to_varchar(crsdeptime),2) || ':' || right(to_varchar(crsdeptime),2)
        end as dep_time_text
    , case when len(to_varchar(crsarrtime)) = 3 then left(to_varchar(crsarrtime),1) || ':' || right(to_varchar(crsarrtime),2)
        when len(to_varchar(crsarrtime)) = 4 then left(to_varchar(crsarrtime),2) || ':' || right(to_varchar(crsarrtime),2)
        end as arr_time_text
    , case when crsdeptime >= 400 and crsdeptime < 1200 then 'Morning'
        when crsdeptime >= 1200 and crsdeptime < 1700 then 'Afternoon'
        when crsdeptime >=1700 and crsdeptime < 2000 then 'Evening'
        else 'Night'
        end as dep_time_bin
    , case when crsarrtime >= 400 and crsarrtime < 1200 then 'Morning'
        when crsarrtime >= 1200 and crsarrtime < 1700 then 'Afternoon'
        when crsarrtime >=1700 and crsarrtime < 2000 then 'Evening'
        else 'Night'
        end as arr_time_bin
    , origin
    , dest
    , airline
    , sum(nvl(hybrid_model_prediction,0)) as sum_delay_prediction
    from flights.public.flight_prediction_data
    group by all
)

select a.day_of_week_num
, a.flight_month
, a.crsdeptime
, a.crsarrtime
, a.dep_time_text
, a.arr_time_text
, a.dep_time_bin
, a.arr_time_bin
, a.origin
, a.dest
, a.airline
, a.avg_delay_actual
, a.count_of_flights
, nvl(b.sum_delay_prediction,0) / a.count_of_flights as avg_delay_prediction
from flight_data a
left join flight_pred_data b
    on a.day_of_week_num = b.day_of_week_num
    and a.flight_month = b.flight_month
    and a.crsdeptime = b.crsdeptime
    and a.crsarrtime = b.crsarrtime
    and a.origin = b.origin
    and a.dest = b.dest
    and a.airline = b.airline
;

//Flight Delay data per Airport x Airline
WITH dep_airports AS (
    select origin as airport
    , airline
    , avg(nvl(try_to_number(depdelayminutes),0)) as avg_dep_delay
    from flights.public.flights_data
    group by all
)

, arr_airports AS (
    select dest as airport
    , airline
    , avg(nvl(try_to_number(arrdelayminutes),0)) as avg_arr_delay
    from flights.public.flights_data
    group by all
)

select nvl(a.airport, b.airport) as airport
, nvl(a.airline, b.airline) as airline
, nvl(avg_dep_delay,0) as avg_dep_delay
, nvl(avg_arr_delay,0) as avg_arr_delay
from dep_airports a
full outer join arr_airports b
    on a.airport = b.airport
    and a.airline = b.airline
; 
